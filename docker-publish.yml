# .github/workflows/docker-publish.yml
name: Docker Build and Push to GHCR

on:
  release:
    types: [published] # Jalankan saat rilis baru dipublikasikan
  push:
    branches: [ main ] # Bisa juga build di main branch
    tags: [ 'v*.*.*' ] # Atau saat tag vX.Y.Z di-push
  workflow_dispatch: # Pemicu manual

env:
  # Nama image di GitHub Container Registry (ghcr.io)
  # Format: ghcr.io/<USERNAME_ATAU_ORG>/<NAMA_REPO>:<TAG>
  IMAGE_NAME: ${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Izin untuk push ke GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # Token bawaan punya izin 'packages: write'

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          # Opsi tagging:
          # - type=schedule
          # - type=ref,event=branch
          # - type=ref,event=pr
          # - type=semver,pattern={{version}} # Untuk tag vX.Y.Z
          # - type=semver,pattern={{major}}.{{minor}}
          # - type=sha # Tag dengan SHA commit
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,prefix=,suffix=,format=short
            # Tag 'latest' jika push ke branch default (main)
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: . # Konteks build Docker (biasanya root repo)
          push: ${{ github.event_name != 'pull_request' }} # Hanya push jika bukan PR
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha # Aktifkan cache build Docker Actions
          cache-to: type=gha,mode=max
